/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode *l3 = new ListNode();
        ListNode *ptr1 = l1, *ptr2 = l2;
        ListNode *ptr3 = l3;
        int tmp = 0;
        while(true){
            int n1 = (ptr1 == nullptr) ? 0 : ptr1->val;
            int n2 = (ptr2 == nullptr) ? 0 : ptr2->val;
            if(ptr1 == nullptr && ptr2 == nullptr && tmp == 0){
                break;
            }
            ptr3->val = n1 + n2 + tmp;
            tmp = 0;
            if(ptr3->val >= 10){
                ptr3->val = ptr3->val % 10;
                tmp = 1;
            }
            ptr1 = (ptr1 == nullptr) ? ptr1 : ptr1->next;
            ptr2 = (ptr2 == nullptr) ? ptr2 : ptr2->next;
            if(ptr1 != nullptr || ptr2 != nullptr || tmp != 0){
                ptr3->next = new ListNode();
                ptr3 = ptr3->next;
            }
        }
        return l3;
    }
};
