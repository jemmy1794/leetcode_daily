class Solution {
public:
    std::ostringstream osStream;
    struct arr {
        char c;
        struct arr* next;
    };

    struct ArrList {
        struct arr *element;
        struct arr *itr;
    };
    

    string convert(string s, int numRows) {
        struct ArrList* arrList = new ArrList[numRows];

        for(int i = 0; i < numRows; i++){
            arrList[i].element = nullptr;
            arrList[i].itr = nullptr;
        }
        bool ifDown = true;
        int curr = 0;
        if(s.size() == 1 || numRows == 1){
            return s;
        }
        for(int i = 0; i < s.size(); i++){
            struct arr *tmp = new struct arr;
            tmp->c = s[i];
            tmp->next = nullptr;
            if(arrList[curr].itr == nullptr){
                arrList[curr].element = tmp;
                arrList[curr].itr = tmp;
            }else{
                arrList[curr].itr->next = tmp;
                arrList[curr].itr = tmp;
            }
            if( ifDown ){
                if( curr == numRows - 1){
                    ifDown = !ifDown;
                    curr--;
                }else{
                    curr++;
                }
            }else{
                if(curr == 0){
                    ifDown = !ifDown;
                    curr++;
                }else{
                    curr--;
                }
            }
            //std::cout << curr <<std::endl;
            
        }
        //std::cout << " " <<std::endl;
        for(int i = 0; i < numRows; i++){
            //std::cout << i <<std::endl;
            struct arr *itr = arrList[i].element;
            while(itr != nullptr){
                osStream << itr->c;
                itr = itr->next;
                //std::cout << itr->c <<std::endl;
            }
        }
        //std::cout << osStream.str() <<std::endl;
        return osStream.str();
    }
};
